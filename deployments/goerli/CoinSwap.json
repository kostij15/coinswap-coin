{
  "address": "0x2C8E33339742fA52DdfCF69402fA47b7bE979180",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "CoinSwap__Deactivate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "CoinSwap__SwapEthToToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "CoinSwap__SwapTokenToEth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract NewCoin",
          "name": "newCoin",
          "type": "address"
        }
      ],
      "name": "NewCoin__Added",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "addCoin",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "deactivateCoin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        }
      ],
      "name": "getCoin",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "inputValue",
          "type": "uint256"
        }
      ],
      "name": "getEthToToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "initialTokens",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "nameToTokens",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "coin",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        }
      ],
      "name": "swapEthToToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "swapTokenToEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "destTokenName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "swapTokenToToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x112591bc107216608064443fd5d8e5e1e97d4fad294648d3937df244bcabe8ec",
  "receipt": {
    "to": null,
    "from": "0x349A2ad632221A02deB145C2799c7aDD9248dBAf",
    "contractAddress": "0x2C8E33339742fA52DdfCF69402fA47b7bE979180",
    "transactionIndex": 99,
    "gasUsed": "5281149",
    "logsBloom": "0x
    "blockHash": "0x8523130c2caca1485ef9bf90cf39fa5540c8755b4ce01dacfb4f5701e2ac7bb5",
    "transactionHash": "0x112591bc107216608064443fd5d8e5e1e97d4fad294648d3937df244bcabe8ec",
    "logs": [
      {
        "transactionIndex": 99,
        "blockNumber": 7918391,
        "transactionHash": "0x112591bc107216608064443fd5d8e5e1e97d4fad294648d3937df244bcabe8ec",
        "address": "0x27c8b6E66A0d27F7815EEdc55D2FD947C72b5350",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000002c8e33339742fa52ddfcf69402fa47b7be979180"
        ],
        "data": "0x00000000000000000000000000000000000000000000152d02c7e14af6800000",
        "logIndex": 133,
        "blockHash": "0x8523130c2caca1485ef9bf90cf39fa5540c8755b4ce01dacfb4f5701e2ac7bb5"
      },
      {
        "transactionIndex": 99,
        "blockNumber": 7918391,
        "transactionHash": "0x112591bc107216608064443fd5d8e5e1e97d4fad294648d3937df244bcabe8ec",
        "address": "0x89aF9cB0B2506345654477D075B49d4951c4E09f",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000002c8e33339742fa52ddfcf69402fa47b7be979180"
        ],
        "data": "0x00000000000000000000000000000000000000000000152d02c7e14af6800000",
        "logIndex": 134,
        "blockHash": "0x8523130c2caca1485ef9bf90cf39fa5540c8755b4ce01dacfb4f5701e2ac7bb5"
      }
    ],
    "blockNumber": 7918391,
    "cumulativeGasUsed": "14080309",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "24abb0f8155693a94530d8fb6e18c594",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"CoinSwap__Deactivate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"CoinSwap__SwapEthToToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"CoinSwap__SwapTokenToEth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract NewCoin\",\"name\":\"newCoin\",\"type\":\"address\"}],\"name\":\"NewCoin__Added\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"addCoin\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"deactivateCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"}],\"name\":\"getCoin\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inputValue\",\"type\":\"uint256\"}],\"name\":\"getEthToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"initialTokens\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"nameToTokens\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"coin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"}],\"name\":\"swapEthToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"swapTokenToEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"destTokenName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"swapTokenToToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addCoin(string,string)\":{\"details\":\"addCoin allows us to both add and create a new Coin to the exchange\",\"params\":{\"name\":\"- describes the name of the coin created\",\"symbol\":\"- describes the symbol of the coin being created\"}},\"deactivateCoin(string)\":{\"details\":\"Deactivates coin from exchange so that it is no longer active for swapping\",\"params\":{\"name\":\"- name of coin wanted to deactivate\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CoinSwap.sol\":\"CoinSwap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/CoinSwap.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.9;\\r\\n\\r\\nimport \\\"./NewCoin.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\n\\r\\ncontract CoinSwap {\\r\\n    string[] public initialTokens = [\\\"1Coin\\\", \\\"FunCoin\\\"];\\r\\n    struct tokenInformation {\\r\\n        ERC20 coin;\\r\\n        bool isActive;\\r\\n    }\\r\\n    mapping(string => tokenInformation) public nameToTokens;\\r\\n\\r\\n    uint256 private constant ethValue = 1500000000000000000000;\\r\\n\\r\\n    //emit\\r\\n    event NewCoin__Added(NewCoin newCoin);\\r\\n    event CoinSwap__Deactivate(string name);\\r\\n    event CoinSwap__SwapEthToToken(string name, uint256 value);\\r\\n    event CoinSwap__SwapTokenToEth(string name, uint256 value);\\r\\n\\r\\n    //modifiers\\r\\n    /**\\r\\n     * @dev coinExistsAndActive checks to make sure there aren't any duplicate names of coins\\r\\n     * @param name represents the name of the coin\\r\\n     */\\r\\n    modifier coinExistsAndActive(string memory name) {\\r\\n        require(\\r\\n            nameToTokens[name].isActive == false,\\r\\n            \\\"The value is not present\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor() {\\r\\n        for (uint i = 0; i < initialTokens.length; i++) {\\r\\n            NewCoin token = new NewCoin(initialTokens[i], initialTokens[i]);\\r\\n\\r\\n            nameToTokens[initialTokens[i]] = tokenInformation(token, true);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev addCoin allows us to both add and create a new Coin to the exchange\\r\\n     * @param name - describes the name of the coin created\\r\\n     * @param symbol - describes the symbol of the coin being created\\r\\n     */\\r\\n    function addCoin(string memory name, string memory symbol)\\r\\n        external\\r\\n        coinExistsAndActive(name)\\r\\n        returns (string memory)\\r\\n    {\\r\\n        //Creates new coin\\r\\n        NewCoin newlyCreatedCoin = new NewCoin(name, symbol);\\r\\n        //Adds Coin to mapping of coins\\r\\n        nameToTokens[name] = tokenInformation(newlyCreatedCoin, true);\\r\\n        //emitting event for adding coin\\r\\n        emit NewCoin__Added(newlyCreatedCoin);\\r\\n        return symbol;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Deactivates coin from exchange so that it is no longer active for swapping\\r\\n     * @param name - name of coin wanted to deactivate\\r\\n     */\\r\\n    function deactivateCoin(string memory name) external {\\r\\n        nameToTokens[name].isActive = false;\\r\\n        emit CoinSwap__Deactivate(name);\\r\\n    }\\r\\n\\r\\n    function swapTokenToEth(string memory tokenName, uint _amount)\\r\\n        public\\r\\n        returns (uint256)\\r\\n    {\\r\\n        uint256 ethToBeTransferred = _amount / ethValue;\\r\\n        require(\\r\\n            address(this).balance >= ethToBeTransferred,\\r\\n            \\\"Dex has low balance of eth\\\"\\r\\n        );\\r\\n        payable(msg.sender).transfer(ethToBeTransferred);\\r\\n        _approveCoin(tokenName, _amount);\\r\\n        require(\\r\\n            nameToTokens[tokenName].coin.transferFrom(\\r\\n                msg.sender,\\r\\n                address(this),\\r\\n                _amount\\r\\n            ),\\r\\n            \\\"ISSUEEEE\\\"\\r\\n        );\\r\\n        emit CoinSwap__SwapTokenToEth(tokenName, ethToBeTransferred);\\r\\n        return ethToBeTransferred;\\r\\n    }\\r\\n\\r\\n    function swapEthToToken(string memory tokenName)\\r\\n        public\\r\\n        payable\\r\\n        returns (uint256)\\r\\n    {\\r\\n        uint256 outputValue = getEthToToken(msg.value);\\r\\n        require(\\r\\n            getTokenBalance(tokenName, address(this)) >= outputValue,\\r\\n            \\\"There isn't enough coin in the DEX\\\"\\r\\n        );\\r\\n        require(nameToTokens[tokenName].coin.transfer(msg.sender, outputValue));\\r\\n        emit CoinSwap__SwapEthToToken(tokenName, outputValue);\\r\\n        return outputValue;\\r\\n    }\\r\\n\\r\\n    function swapTokenToToken(\\r\\n        string memory tokenName,\\r\\n        string memory destTokenName,\\r\\n        uint _amount\\r\\n    ) public {\\r\\n        require(\\r\\n            nameToTokens[tokenName].coin.transferFrom(\\r\\n                msg.sender,\\r\\n                address(this),\\r\\n                _amount\\r\\n            )\\r\\n        );\\r\\n        require(nameToTokens[destTokenName].coin.transfer(msg.sender, _amount));\\r\\n    }\\r\\n\\r\\n    //internal\\r\\n    function _approveCoin(string memory tokenName, uint256 _amount) internal {\\r\\n        nameToTokens[tokenName].coin.approve(msg.sender, _amount);\\r\\n    }\\r\\n\\r\\n    //pure functions\\r\\n    function getEthToToken(uint256 inputValue) public pure returns (uint256) {\\r\\n        return (inputValue * ethValue) / 10**18;\\r\\n    }\\r\\n\\r\\n    //view function\\r\\n    function getCoin(string memory tokenName) public view returns (ERC20) {\\r\\n        return nameToTokens[tokenName].coin;\\r\\n    }\\r\\n\\r\\n    function getTokenBalance(string memory tokenName, address _address)\\r\\n        public\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        return getCoin(tokenName).balanceOf(_address);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xa0d4968811a7a8bb4411117d8eb315b097ae9661395ac97797d1b1315b8b9576\",\"license\":\"MIT\"},\"contracts/NewCoin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.9;\\r\\n\\r\\n//importing contracts\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\n\\r\\ncontract NewCoin is ERC20 {\\r\\n    constructor(string memory coinName, string memory coinSymbol)\\r\\n        ERC20(coinName, coinSymbol)\\r\\n    {\\r\\n        _mint(msg.sender, 100000 * 10**18);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf5f4b74fd54e9aea8e9e1544eb31d38e894b479ca41f2e31fd5daad2d874618d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405260405180604001604052806040518060400160405280600581526020017f31436f696e00000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600781526020017f46756e436f696e0000000000000000000000000000000000000000000000000081525081525060009060026200009592919062000229565b50348015620000a357600080fd5b5060005b60008054905081101562000222576000808281548110620000cd57620000cc62000324565b5b9060005260206000200160008381548110620000ee57620000ed62000324565b5b90600052602060002001604051620001069062000289565b620001139291906200046d565b604051809103906000f08015801562000130573d6000803e3d6000fd5b50905060405180604001604052808273ffffffffffffffffffffffffffffffffffffffff168152602001600115158152506001600084815481106200017a576200017962000324565b5b9060005260206000200160405162000193919062000542565b908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908315150217905550905050508080620002199062000594565b915050620000a7565b50620008bf565b82805482825590600052602060002090810192821562000276579160200282015b8281111562000275578251829081620002649190620007d8565b50916020019190600101906200024a565b5b50905062000285919062000297565b5090565b611ab28062003cd883390190565b5b80821115620002bb5760008181620002b19190620002bf565b5060010162000298565b5090565b508054620002cd9062000382565b6000825580601f10620002e1575062000302565b601f01602090049060005260206000209081019062000301919062000305565b5b50565b5b808211156200032057600081600090555060010162000306565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200039b57607f821691505b602082108103620003b157620003b062000353565b5b50919050565b600082825260208201905092915050565b60008190508160005260206000209050919050565b60008154620003ec8162000382565b620003f88186620003b7565b945060018216600081146200041657600181146200042d5762000464565b60ff19831686528115156020028601935062000464565b6200043885620003c8565b60005b838110156200045c578154818901526001820191506020810190506200043b565b808801955050505b50505092915050565b60006040820190508181036000830152620004898185620003dd565b905081810360208301526200049f8184620003dd565b90509392505050565b600081905092915050565b60008154620004c28162000382565b620004ce8186620004a8565b94506001821660008114620004ec5760018114620005025762000539565b60ff198316865281151582028601935062000539565b6200050d85620003c8565b60005b83811015620005315781548189015260018201915060208101905062000510565b838801955050505b50505092915050565b6000620005508284620004b3565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b6000620005a1826200058a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620005d657620005d56200055b565b5b600182019050919050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200066a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200062b565b6200067686836200062b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620006b9620006b3620006ad846200058a565b6200068e565b6200058a565b9050919050565b6000819050919050565b620006d58362000698565b620006ed620006e482620006c0565b84845462000638565b825550505050565b600090565b62000704620006f5565b62000711818484620006ca565b505050565b5b8181101562000739576200072d600082620006fa565b60018101905062000717565b5050565b601f82111562000788576200075281620003c8565b6200075d846200061b565b810160208510156200076d578190505b620007856200077c856200061b565b83018262000716565b50505b505050565b600082821c905092915050565b6000620007ad600019846008026200078d565b1980831691505092915050565b6000620007c883836200079a565b9150826002028217905092915050565b620007e382620005e1565b67ffffffffffffffff811115620007ff57620007fe620005ec565b5b6200080b825462000382565b620008188282856200073d565b600060209050601f8311600181146200085057600084156200083b578287015190505b620008478582620007ba565b865550620008b7565b601f1984166200086086620003c8565b60005b828110156200088a5784890151825560018201915060208501945060208101905062000863565b86831015620008aa5784890151620008a6601f8916826200079a565b8355505b6001600288020188555050505b505050505050565b61340980620008cf6000396000f3fe6080604052600436106200009e5760003560e01c80637ca3323111620000615780637ca3323114620001ea578063b5e765d6146200022e578063bf015aae1462000272578063c1c3f64c14620002a0578063db6f63ee14620002ce576200009e565b8063047c02fe14620000a357806317df2e8114620000e85780632017fb74146200012c5780633cdb9762146200017057806363fcf7c514620001b4575b600080fd5b348015620000b057600080fd5b50620000cf6004803603810190620000c9919062000ee3565b62000312565b604051620000df92919062000fdc565b60405180910390f35b348015620000f557600080fd5b506200011460048036038101906200010e919062001044565b62000379565b60405162000123919062001087565b60405180910390f35b3480156200013957600080fd5b5062000158600480360381019062000152919062000ee3565b620003ae565b604051620001679190620010a4565b60405180910390f35b3480156200017d57600080fd5b506200019c600480360381019062000196919062001106565b620003fb565b604051620001ab919062001087565b60405180910390f35b620001d26004803603810190620001cc919062000ee3565b6200048e565b604051620001e1919062001087565b60405180910390f35b348015620001f757600080fd5b5062000216600480360381019062000210919062001044565b62000603565b604051620002259190620011f5565b60405180910390f35b3480156200023b57600080fd5b506200025a600480360381019062000254919062001219565b620006b8565b604051620002699190620011f5565b60405180910390f35b3480156200027f57600080fd5b506200029e60048036038101906200029891906200129e565b62000870565b005b348015620002ad57600080fd5b50620002cc6004803603810190620002c6919062000ee3565b62000a17565b005b348015620002db57600080fd5b50620002fa6004803603810190620002f4919062001338565b62000a8f565b60405162000309919062001087565b60405180910390f35b6001818051602081018201805184825260208301602085012081835280955050505050506000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16905082565b6000670de0b6b3a7640000685150ae84a8cdf00000836200039b9190620013cd565b620003a7919062001447565b9050919050565b6000600182604051620003c29190620014c1565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006200040883620003ae565b73ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401620004429190620014eb565b602060405180830381865afa15801562000460573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200048691906200151f565b905092915050565b6000806200049c3462000379565b905080620004ab8430620003fb565b1015620004ef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004e690620015c7565b60405180910390fd5b600183604051620005019190620014c1565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016200056f929190620015e9565b6020604051808303816000875af11580156200058f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005b5919062001647565b620005bf57600080fd5b7f4537c0ceba6619ae8f769b63197d322e0cdd9637f47de1418a90a8f28f96a5cd8382604051620005f292919062001679565b60405180910390a180915050919050565b600081815481106200061457600080fd5b9060005260206000200160009150905080546200063190620016dc565b80601f01602080910402602001604051908101604052809291908181526020018280546200065f90620016dc565b8015620006b05780601f106200068457610100808354040283529160200191620006b0565b820191906000526020600020905b8154815290600101906020018083116200069257829003601f168201915b505050505081565b60608260001515600182604051620006d19190620014c1565b908152602001604051809103902060000160149054906101000a900460ff1615151462000735576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200072c9062001761565b60405180910390fd5b60008484604051620007479062000d5f565b6200075492919062001783565b604051809103906000f08015801562000771573d6000803e3d6000fd5b50905060405180604001604052808273ffffffffffffffffffffffffffffffffffffffff16815260200160011515815250600186604051620007b49190620014c1565b908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff0219169083151502179055509050507f0aeb93e8749941ba5f87b405bc929e5fcb8cc864780e5109e652b17cb9ef1e51816040516200085d9190620017e3565b60405180910390a1839250505092915050565b600183604051620008829190620014c1565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401620008f29392919062001800565b6020604051808303816000875af115801562000912573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000938919062001647565b6200094257600080fd5b600182604051620009549190620014c1565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401620009c2929190620015e9565b6020604051808303816000875af1158015620009e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a08919062001647565b62000a1257600080fd5b505050565b600060018260405162000a2b9190620014c1565b908152602001604051809103902060000160146101000a81548160ff0219169083151502179055507ffa05904481ea1fb885236ec2e8995e73a5fe088553f84d4c834a799a7c73bdd48160405162000a849190620011f5565b60405180910390a150565b600080685150ae84a8cdf000008362000aa9919062001447565b90508047101562000af1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000ae8906200188d565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801562000b38573d6000803e3d6000fd5b5062000b45848462000c94565b60018460405162000b579190620014c1565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040162000bc79392919062001800565b6020604051808303816000875af115801562000be7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c0d919062001647565b62000c4f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000c4690620018ff565b60405180910390fd5b7fc5e66be7baf3711a4c18be62bbb39a4ea26862a2269c711dec1a8224f9a03990848260405162000c8292919062001679565b60405180910390a18091505092915050565b60018260405162000ca69190620014c1565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b333836040518363ffffffff1660e01b815260040162000d14929190620015e9565b6020604051808303816000875af115801562000d34573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d5a919062001647565b505050565b611ab2806200192283390190565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000dd68262000d8b565b810181811067ffffffffffffffff8211171562000df85762000df762000d9c565b5b80604052505050565b600062000e0d62000d6d565b905062000e1b828262000dcb565b919050565b600067ffffffffffffffff82111562000e3e5762000e3d62000d9c565b5b62000e498262000d8b565b9050602081019050919050565b82818337600083830152505050565b600062000e7c62000e768462000e20565b62000e01565b90508281526020810184848401111562000e9b5762000e9a62000d86565b5b62000ea884828562000e56565b509392505050565b600082601f83011262000ec85762000ec762000d81565b5b813562000eda84826020860162000e65565b91505092915050565b60006020828403121562000efc5762000efb62000d77565b5b600082013567ffffffffffffffff81111562000f1d5762000f1c62000d7c565b5b62000f2b8482850162000eb0565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600062000f7f62000f7962000f738462000f34565b62000f54565b62000f34565b9050919050565b600062000f938262000f5e565b9050919050565b600062000fa78262000f86565b9050919050565b62000fb98162000f9a565b82525050565b60008115159050919050565b62000fd68162000fbf565b82525050565b600060408201905062000ff3600083018562000fae565b62001002602083018462000fcb565b9392505050565b6000819050919050565b6200101e8162001009565b81146200102a57600080fd5b50565b6000813590506200103e8162001013565b92915050565b6000602082840312156200105d576200105c62000d77565b5b60006200106d848285016200102d565b91505092915050565b620010818162001009565b82525050565b60006020820190506200109e600083018462001076565b92915050565b6000602082019050620010bb600083018462000fae565b92915050565b6000620010ce8262000f34565b9050919050565b620010e081620010c1565b8114620010ec57600080fd5b50565b6000813590506200110081620010d5565b92915050565b6000806040838503121562001120576200111f62000d77565b5b600083013567ffffffffffffffff81111562001141576200114062000d7c565b5b6200114f8582860162000eb0565b92505060206200116285828601620010ef565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620011a85780820151818401526020810190506200118b565b60008484015250505050565b6000620011c1826200116c565b620011cd818562001177565b9350620011df81856020860162001188565b620011ea8162000d8b565b840191505092915050565b60006020820190508181036000830152620012118184620011b4565b905092915050565b6000806040838503121562001233576200123262000d77565b5b600083013567ffffffffffffffff81111562001254576200125362000d7c565b5b620012628582860162000eb0565b925050602083013567ffffffffffffffff81111562001286576200128562000d7c565b5b620012948582860162000eb0565b9150509250929050565b600080600060608486031215620012ba57620012b962000d77565b5b600084013567ffffffffffffffff811115620012db57620012da62000d7c565b5b620012e98682870162000eb0565b935050602084013567ffffffffffffffff8111156200130d576200130c62000d7c565b5b6200131b8682870162000eb0565b92505060406200132e868287016200102d565b9150509250925092565b6000806040838503121562001352576200135162000d77565b5b600083013567ffffffffffffffff81111562001373576200137262000d7c565b5b620013818582860162000eb0565b925050602062001394858286016200102d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620013da8262001009565b9150620013e78362001009565b9250828202620013f78162001009565b915082820484148315176200141157620014106200139e565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000620014548262001009565b9150620014618362001009565b92508262001474576200147362001418565b5b828204905092915050565b600081905092915050565b600062001497826200116c565b620014a381856200147f565b9350620014b581856020860162001188565b80840191505092915050565b6000620014cf82846200148a565b915081905092915050565b620014e581620010c1565b82525050565b6000602082019050620015026000830184620014da565b92915050565b600081519050620015198162001013565b92915050565b60006020828403121562001538576200153762000d77565b5b6000620015488482850162001508565b91505092915050565b7f54686572652069736e277420656e6f75676820636f696e20696e20746865204460008201527f4558000000000000000000000000000000000000000000000000000000000000602082015250565b6000620015af60228362001177565b9150620015bc8262001551565b604082019050919050565b60006020820190508181036000830152620015e281620015a0565b9050919050565b6000604082019050620016006000830185620014da565b6200160f602083018462001076565b9392505050565b620016218162000fbf565b81146200162d57600080fd5b50565b600081519050620016418162001616565b92915050565b60006020828403121562001660576200165f62000d77565b5b6000620016708482850162001630565b91505092915050565b60006040820190508181036000830152620016958185620011b4565b9050620016a6602083018462001076565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620016f557607f821691505b6020821081036200170b576200170a620016ad565b5b50919050565b7f5468652076616c7565206973206e6f742070726573656e740000000000000000600082015250565b60006200174960188362001177565b9150620017568262001711565b602082019050919050565b600060208201905081810360008301526200177c816200173a565b9050919050565b600060408201905081810360008301526200179f8185620011b4565b90508181036020830152620017b58184620011b4565b90509392505050565b6000620017cb8262000f86565b9050919050565b620017dd81620017be565b82525050565b6000602082019050620017fa6000830184620017d2565b92915050565b6000606082019050620018176000830186620014da565b620018266020830185620014da565b62001835604083018462001076565b949350505050565b7f44657820686173206c6f772062616c616e6365206f6620657468000000000000600082015250565b600062001875601a8362001177565b915062001882826200183d565b602082019050919050565b60006020820190508181036000830152620018a88162001866565b9050919050565b7f4953535545454545000000000000000000000000000000000000000000000000600082015250565b6000620018e760088362001177565b9150620018f482620018af565b602082019050919050565b600060208201905081810360008301526200191a81620018d8565b905091905056fe60806040523480156200001157600080fd5b5060405162001ab238038062001ab2833981810160405281019062000037919062000398565b818181600390816200004a919062000668565b5080600490816200005c919062000668565b5050506200007b3369152d02c7e14af68000006200008360201b60201c565b50506200086a565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000f5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000ec90620007b0565b60405180910390fd5b6200010960008383620001fb60201b60201c565b80600260008282546200011d919062000801565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462000174919062000801565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620001db91906200084d565b60405180910390a3620001f7600083836200020060201b60201c565b5050565b505050565b505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200026e8262000223565b810181811067ffffffffffffffff8211171562000290576200028f62000234565b5b80604052505050565b6000620002a562000205565b9050620002b3828262000263565b919050565b600067ffffffffffffffff821115620002d657620002d562000234565b5b620002e18262000223565b9050602081019050919050565b60005b838110156200030e578082015181840152602081019050620002f1565b60008484015250505050565b6000620003316200032b84620002b8565b62000299565b90508281526020810184848401111562000350576200034f6200021e565b5b6200035d848285620002ee565b509392505050565b600082601f8301126200037d576200037c62000219565b5b81516200038f8482602086016200031a565b91505092915050565b60008060408385031215620003b257620003b16200020f565b5b600083015167ffffffffffffffff811115620003d357620003d262000214565b5b620003e18582860162000365565b925050602083015167ffffffffffffffff81111562000405576200040462000214565b5b620004138582860162000365565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200047057607f821691505b60208210810362000486576200048562000428565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004f07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004b1565b620004fc8683620004b1565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000549620005436200053d8462000514565b6200051e565b62000514565b9050919050565b6000819050919050565b620005658362000528565b6200057d620005748262000550565b848454620004be565b825550505050565b600090565b6200059462000585565b620005a18184846200055a565b505050565b5b81811015620005c957620005bd6000826200058a565b600181019050620005a7565b5050565b601f8211156200061857620005e2816200048c565b620005ed84620004a1565b81016020851015620005fd578190505b620006156200060c85620004a1565b830182620005a6565b50505b505050565b600082821c905092915050565b60006200063d600019846008026200061d565b1980831691505092915050565b60006200065883836200062a565b9150826002028217905092915050565b62000673826200041d565b67ffffffffffffffff8111156200068f576200068e62000234565b5b6200069b825462000457565b620006a8828285620005cd565b600060209050601f831160018114620006e05760008415620006cb578287015190505b620006d785826200064a565b86555062000747565b601f198416620006f0866200048c565b60005b828110156200071a57848901518255600182019150602085019450602081019050620006f3565b868310156200073a578489015162000736601f8916826200062a565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600062000798601f836200074f565b9150620007a58262000760565b602082019050919050565b60006020820190508181036000830152620007cb8162000789565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200080e8262000514565b91506200081b8362000514565b9250828201905080821115620008365762000835620007d2565b5b92915050565b620008478162000514565b82525050565b60006020820190506200086460008301846200083c565b92915050565b611238806200087a6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b15565b60405180910390f35b6100e660048036038101906100e19190610bd0565b610308565b6040516100f39190610c2b565b60405180910390f35b61010461032b565b6040516101119190610c55565b60405180910390f35b610134600480360381019061012f9190610c70565b610335565b6040516101419190610c2b565b60405180910390f35b610152610364565b60405161015f9190610cdf565b60405180910390f35b610182600480360381019061017d9190610bd0565b61036d565b60405161018f9190610c2b565b60405180910390f35b6101b260048036038101906101ad9190610cfa565b6103a4565b6040516101bf9190610c55565b60405180910390f35b6101d06103ec565b6040516101dd9190610b15565b60405180910390f35b61020060048036038101906101fb9190610bd0565b61047e565b60405161020d9190610c2b565b60405180910390f35b610230600480360381019061022b9190610bd0565b6104f5565b60405161023d9190610c2b565b60405180910390f35b610260600480360381019061025b9190610d27565b610518565b60405161026d9190610c55565b60405180910390f35b60606003805461028590610d96565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d96565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610df6565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d96565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d96565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e9c565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f2e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fc0565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c55565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df9061102c565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110be565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611150565b60405180910390fd5b6108e5838383610a7b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111e2565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109fe9190610df6565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a629190610c55565b60405180910390a3610a75848484610a80565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610abf578082015181840152602081019050610aa4565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ae782610a85565b610af18185610a90565b9350610b01818560208601610aa1565b610b0a81610acb565b840191505092915050565b60006020820190508181036000830152610b2f8184610adc565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6782610b3c565b9050919050565b610b7781610b5c565b8114610b8257600080fd5b50565b600081359050610b9481610b6e565b92915050565b6000819050919050565b610bad81610b9a565b8114610bb857600080fd5b50565b600081359050610bca81610ba4565b92915050565b60008060408385031215610be757610be6610b37565b5b6000610bf585828601610b85565b9250506020610c0685828601610bbb565b9150509250929050565b60008115159050919050565b610c2581610c10565b82525050565b6000602082019050610c406000830184610c1c565b92915050565b610c4f81610b9a565b82525050565b6000602082019050610c6a6000830184610c46565b92915050565b600080600060608486031215610c8957610c88610b37565b5b6000610c9786828701610b85565b9350506020610ca886828701610b85565b9250506040610cb986828701610bbb565b9150509250925092565b600060ff82169050919050565b610cd981610cc3565b82525050565b6000602082019050610cf46000830184610cd0565b92915050565b600060208284031215610d1057610d0f610b37565b5b6000610d1e84828501610b85565b91505092915050565b60008060408385031215610d3e57610d3d610b37565b5b6000610d4c85828601610b85565b9250506020610d5d85828601610b85565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610dae57607f821691505b602082108103610dc157610dc0610d67565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0182610b9a565b9150610e0c83610b9a565b9250828201905080821115610e2457610e23610dc7565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e86602583610a90565b9150610e9182610e2a565b604082019050919050565b60006020820190508181036000830152610eb581610e79565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f18602483610a90565b9150610f2382610ebc565b604082019050919050565b60006020820190508181036000830152610f4781610f0b565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610faa602283610a90565b9150610fb582610f4e565b604082019050919050565b60006020820190508181036000830152610fd981610f9d565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611016601d83610a90565b915061102182610fe0565b602082019050919050565b6000602082019050818103600083015261104581611009565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110a8602583610a90565b91506110b38261104c565b604082019050919050565b600060208201905081810360008301526110d78161109b565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061113a602383610a90565b9150611145826110de565b604082019050919050565b600060208201905081810360008301526111698161112d565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111cc602683610a90565b91506111d782611170565b604082019050919050565b600060208201905081810360008301526111fb816111bf565b905091905056fea2646970667358221220cff83175d30fca7d5a7ebaaf96a7adabfdb1de82efdafbba55f0af7fb0e0d4db64736f6c63430008110033a2646970667358221220ffb0217870bff2d19cbafe9fedf9cebb4a195964a1911d7b4eb340b04ce6008064736f6c6343000811003360806040523480156200001157600080fd5b5060405162001ab238038062001ab2833981810160405281019062000037919062000398565b818181600390816200004a919062000668565b5080600490816200005c919062000668565b5050506200007b3369152d02c7e14af68000006200008360201b60201c565b50506200086a565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000f5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000ec90620007b0565b60405180910390fd5b6200010960008383620001fb60201b60201c565b80600260008282546200011d919062000801565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462000174919062000801565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620001db91906200084d565b60405180910390a3620001f7600083836200020060201b60201c565b5050565b505050565b505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200026e8262000223565b810181811067ffffffffffffffff8211171562000290576200028f62000234565b5b80604052505050565b6000620002a562000205565b9050620002b3828262000263565b919050565b600067ffffffffffffffff821115620002d657620002d562000234565b5b620002e18262000223565b9050602081019050919050565b60005b838110156200030e578082015181840152602081019050620002f1565b60008484015250505050565b6000620003316200032b84620002b8565b62000299565b90508281526020810184848401111562000350576200034f6200021e565b5b6200035d848285620002ee565b509392505050565b600082601f8301126200037d576200037c62000219565b5b81516200038f8482602086016200031a565b91505092915050565b60008060408385031215620003b257620003b16200020f565b5b600083015167ffffffffffffffff811115620003d357620003d262000214565b5b620003e18582860162000365565b925050602083015167ffffffffffffffff81111562000405576200040462000214565b5b620004138582860162000365565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200047057607f821691505b60208210810362000486576200048562000428565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004f07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004b1565b620004fc8683620004b1565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000549620005436200053d8462000514565b6200051e565b62000514565b9050919050565b6000819050919050565b620005658362000528565b6200057d620005748262000550565b848454620004be565b825550505050565b600090565b6200059462000585565b620005a18184846200055a565b505050565b5b81811015620005c957620005bd6000826200058a565b600181019050620005a7565b5050565b601f8211156200061857620005e2816200048c565b620005ed84620004a1565b81016020851015620005fd578190505b620006156200060c85620004a1565b830182620005a6565b50505b505050565b600082821c905092915050565b60006200063d600019846008026200061d565b1980831691505092915050565b60006200065883836200062a565b9150826002028217905092915050565b62000673826200041d565b67ffffffffffffffff8111156200068f576200068e62000234565b5b6200069b825462000457565b620006a8828285620005cd565b600060209050601f831160018114620006e05760008415620006cb578287015190505b620006d785826200064a565b86555062000747565b601f198416620006f0866200048c565b60005b828110156200071a57848901518255600182019150602085019450602081019050620006f3565b868310156200073a578489015162000736601f8916826200062a565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600062000798601f836200074f565b9150620007a58262000760565b602082019050919050565b60006020820190508181036000830152620007cb8162000789565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200080e8262000514565b91506200081b8362000514565b9250828201905080821115620008365762000835620007d2565b5b92915050565b620008478162000514565b82525050565b60006020820190506200086460008301846200083c565b92915050565b611238806200087a6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b15565b60405180910390f35b6100e660048036038101906100e19190610bd0565b610308565b6040516100f39190610c2b565b60405180910390f35b61010461032b565b6040516101119190610c55565b60405180910390f35b610134600480360381019061012f9190610c70565b610335565b6040516101419190610c2b565b60405180910390f35b610152610364565b60405161015f9190610cdf565b60405180910390f35b610182600480360381019061017d9190610bd0565b61036d565b60405161018f9190610c2b565b60405180910390f35b6101b260048036038101906101ad9190610cfa565b6103a4565b6040516101bf9190610c55565b60405180910390f35b6101d06103ec565b6040516101dd9190610b15565b60405180910390f35b61020060048036038101906101fb9190610bd0565b61047e565b60405161020d9190610c2b565b60405180910390f35b610230600480360381019061022b9190610bd0565b6104f5565b60405161023d9190610c2b565b60405180910390f35b610260600480360381019061025b9190610d27565b610518565b60405161026d9190610c55565b60405180910390f35b60606003805461028590610d96565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d96565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610df6565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d96565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d96565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e9c565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f2e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fc0565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c55565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df9061102c565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110be565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611150565b60405180910390fd5b6108e5838383610a7b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111e2565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109fe9190610df6565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a629190610c55565b60405180910390a3610a75848484610a80565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610abf578082015181840152602081019050610aa4565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ae782610a85565b610af18185610a90565b9350610b01818560208601610aa1565b610b0a81610acb565b840191505092915050565b60006020820190508181036000830152610b2f8184610adc565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6782610b3c565b9050919050565b610b7781610b5c565b8114610b8257600080fd5b50565b600081359050610b9481610b6e565b92915050565b6000819050919050565b610bad81610b9a565b8114610bb857600080fd5b50565b600081359050610bca81610ba4565b92915050565b60008060408385031215610be757610be6610b37565b5b6000610bf585828601610b85565b9250506020610c0685828601610bbb565b9150509250929050565b60008115159050919050565b610c2581610c10565b82525050565b6000602082019050610c406000830184610c1c565b92915050565b610c4f81610b9a565b82525050565b6000602082019050610c6a6000830184610c46565b92915050565b600080600060608486031215610c8957610c88610b37565b5b6000610c9786828701610b85565b9350506020610ca886828701610b85565b9250506040610cb986828701610bbb565b9150509250925092565b600060ff82169050919050565b610cd981610cc3565b82525050565b6000602082019050610cf46000830184610cd0565b92915050565b600060208284031215610d1057610d0f610b37565b5b6000610d1e84828501610b85565b91505092915050565b60008060408385031215610d3e57610d3d610b37565b5b6000610d4c85828601610b85565b9250506020610d5d85828601610b85565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610dae57607f821691505b602082108103610dc157610dc0610d67565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0182610b9a565b9150610e0c83610b9a565b9250828201905080821115610e2457610e23610dc7565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e86602583610a90565b9150610e9182610e2a565b604082019050919050565b60006020820190508181036000830152610eb581610e79565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f18602483610a90565b9150610f2382610ebc565b604082019050919050565b60006020820190508181036000830152610f4781610f0b565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610faa602283610a90565b9150610fb582610f4e565b604082019050919050565b60006020820190508181036000830152610fd981610f9d565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611016601d83610a90565b915061102182610fe0565b602082019050919050565b6000602082019050818103600083015261104581611009565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110a8602583610a90565b91506110b38261104c565b604082019050919050565b600060208201905081810360008301526110d78161109b565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061113a602383610a90565b9150611145826110de565b604082019050919050565b600060208201905081810360008301526111698161112d565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111cc602683610a90565b91506111d782611170565b604082019050919050565b600060208201905081810360008301526111fb816111bf565b905091905056fea2646970667358221220cff83175d30fca7d5a7ebaaf96a7adabfdb1de82efdafbba55f0af7fb0e0d4db64736f6c63430008110033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addCoin(string,string)": {
        "details": "addCoin allows us to both add and create a new Coin to the exchange",
        "params": {
          "name": "- describes the name of the coin created",
          "symbol": "- describes the symbol of the coin being created"
        }
      },
      "deactivateCoin(string)": {
        "details": "Deactivates coin from exchange so that it is no longer active for swapping",
        "params": {
          "name": "- name of coin wanted to deactivate"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 720,
        "contract": "contracts/CoinSwap.sol:CoinSwap",
        "label": "initialTokens",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 731,
        "contract": "contracts/CoinSwap.sol:CoinSwap",
        "label": "nameToTokens",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_struct(tokenInformation)726_storage)"
      }
    ],
    "types": {
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ERC20)585": {
        "encoding": "inplace",
        "label": "contract ERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_string_memory_ptr,t_struct(tokenInformation)726_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct CoinSwap.tokenInformation)",
        "numberOfBytes": "32",
        "value": "t_struct(tokenInformation)726_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(tokenInformation)726_storage": {
        "encoding": "inplace",
        "label": "struct CoinSwap.tokenInformation",
        "members": [
          {
            "astId": 723,
            "contract": "contracts/CoinSwap.sol:CoinSwap",
            "label": "coin",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(ERC20)585"
          },
          {
            "astId": 725,
            "contract": "contracts/CoinSwap.sol:CoinSwap",
            "label": "isActive",
            "offset": 20,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      }
    }
  }
}